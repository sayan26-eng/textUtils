{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","class","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","title","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c8780a93.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">TextUtils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li>}\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n         </li>*/}\r\n      </ul>\r\n      {/*<form className=\"d-flex\" role=\"search\">\r\n      </form>}*/}\r\n    </div>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n  </div>\r\n</nav>\r\n</div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function (props)\r\n {\r\n    const [text, setText] = useState('');\r\n    const handleUpClick=()=>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick=()=>{\r\n      let newText= text.toLowerCase();\r\n      setText(newText)\r\n  }\r\n    const handleonChange=(event)=>{\r\n    setText(event.target.value)\r\n    }\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#2B547E'}}>\r\n    <div class=\"mb-3\">\r\n    <h1>{props.heading}</h1>\r\n    <textarea className=\"form-control\" value={text} onChange ={handleonChange} style={{backgroundColor:props.mode==='dark'?'#2B547E':'white',color:props.mode==='dark'?'white':'black'}} id=\"exampleFormControlTextarea1\" rows=\"10\" ></textarea>\r\n    </div>\r\n    <button className=\"btn btn-dark mx-1\" onClick={handleUpClick}>Covert to Uppercase</button>\r\n    <button className=\"btn btn-dark mx-1\" onClick={handleLoClick}>Covert to Lowercase</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#2B547E'}}>\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    {props.alert.type} : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n//import About from './components/About';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react'\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";*/\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert]= useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode=()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#2B547E';\n      showAlert(\"Dark mode enable\",\"success\");\n      document.title=\"TextUtils - Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode enable\",\"success\");\n      document.title=\"TextUtils - Light Mode\";\n    }\n  }\n  return (\n   <>\n<div className=\"container\">\n  {/*<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          \n          </Route>\n        </Switch>*/}\n        <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <TextForm heading=\"Enter the text to analyze\" mode={mode}/>      \n</div>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}